.gitignore

PROJECT_ROOT = $(TUP_CWD)

CFLAGS += -ffast-math -ffp-contract=fast -msse4.1 -mfma -mavx2
CPPFLAGS += -std=c++17

# Debug build is without optimisations and with DEBUG_BUILD defined.
# Default build is with opitmisations.
# Release build is the same as default build, but without profiling and with debug symbols stripped
ifdef CONFIG_DEBUG_BUILD
    CFLAGS += -O0 -g -DDEBUG_BUILD -DDEV_TOOLS
    BINARY_NAME_SUFFIX = -debug
else
    CFLAGS += -Ofast
    LTO += -flto
    ifndef CONFIG_RELEASE_BUILD
        CFLAGS += -g -DBUILD_WITH_EASY_PROFILER
        BINARY_NAME_SUFFIX = -dev
    else
        # Release build does not include imgui
        CPPFLAGS += -DWITHOUT_IMGUI
    endif
endif
ifdef CONFIG_BUILD_WITH_ASAN
    ifdef CONFIG_DEBUG_BUILD
        BINARY_NAME_SUFFIX = -debug-with-asan
    else 
        ifdef CONFIG_RELEASE_BUILD
            BINARY_NAME_SUFFIX = -with-asan
        else
            BINARY_NAME_SUFFIX = -dev-with-asan
        endif
    endif
    CFLAGS += -fsanitize=address
    LINKER += -fsanitize=address
endif

ROOT_LOCATION = ../..
# Module includes are slightly different, since they live one level of directories deeper
MODULE_INCLUDES += -I$(ROOT_LOCATION)/sdk
# Add vendor includes
VENDOR = $(ROOT_LOCATION)/vendor
MODULE_INCLUDES += -I$(VENDOR)/cr/
MODULE_INCLUDES += -I$(VENDOR)/entt/src
MODULE_INCLUDES += -I$(VENDOR)/toml11
MODULE_INCLUDES += -I$(VENDOR)/glm
MODULE_INCLUDES += -I$(VENDOR)/spdlog/include
MODULE_INCLUDES += -I$(VENDOR)/imgui
MODULE_INCLUDES += -I$(VENDOR)/sparsepp
MODULE_INCLUDES += -I$(VENDOR)/IconFontCppHeaders

# Engine
!pch = |> clang++ $(CPPFLAGS) $(INCLUDES) -stdlib=libstdc++ -x c++-header %f -o %o |>
!compile-engine = | $(PCH).hpp |> clang++ -Wall -Werror $(CFLAGS) $(CPPFLAGS) $(LTO) `sdl2-config --cflags` -include $(PCH).hpp $(INCLUDES) -c %f -o %o |> %d__%B.o
!link-engine = |> clang++ $(LINKER) $(LTO) %f -o %o |>

# Modules
!compile-module = | <module-pch> |> clang++ -fPIC  $(CFLAGS) $(CPPFLAGS) $(MODULE_INCLUDES) $(INCLUDES) $(LTO) -include $(ROOT_LOCATION)/sdk/gou/gou.hpp -c %f -o %o |> %d__%B.o
# -Wl,-z,origin -Wl, -rpath './libs'
!link-module =  | $(ROOT_LOCATION)/sdk/module/entry.o $(ROOT_LOCATION)/vendor/libdearimgui.a |> clang++ $(LTO) $(MODULE_LINKER) -shared $(ROOT_LOCATION)/sdk/module/entry.o $(ROOT_LOCATION)/vendor/libdearimgui.a %f -o %o |> ../%d.module

# Dependencies
!compile-c = |> clang $(CFLAGS) $(INCLUDES) -c %f -o %o |> %d__%B.o
!compile-c++ = |> clang++ $(CFLAGS) $(CPPFLAGS) $(INCLUDES) -c %f -o %o |> %d__%B.o
!ar = |> ar crs %o %f |>
!link-exe = |> clang++ $(LINKER) %f -o %o |>
